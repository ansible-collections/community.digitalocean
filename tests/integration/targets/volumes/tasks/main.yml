---
- block:

    #
    #  Create and delete, should pass
    #

    - name: Ensure API key is provided
      ansible.builtin.fail:
        msg: do_api_key should be defined in tests/integration/integration_config.yml
      when:
        - do_api_key is not defined
        - do_api_key | length == 0

    - name: Delete DigitalOcean volume (leftover)
      community.digitalocean.volumes:
        state: absent
        token: "{{ do_api_key }}"
        name: "{{ volume_name }}"
        region: "{{ region }}"
      register: result
      ignore_errors: true

    - name: Create DigitalOcean volume
      community.digitalocean.volumes:
        state: present
        token: "{{ do_api_key }}"
        name: "{{ volume_name }}"
        region: "{{ region }}"
        size_gigabytes: "{{ size_gigabytes }}"
      register: result

    - name: Verify volume create idempotency and formatting
      ansible.builtin.assert:
        that:
          - result.changed
          - result.volume is defined
          - result.volume.id is defined

    - name: Sleep for a minute
      ansible.builtin.pause:
        minutes: 1

    - name: Delete DigitalOcean volume
      community.digitalocean.volumes:
        state: absent
        token: "{{ do_api_key }}"
        name: "{{ volume_name }}"
        region: "{{ region }}"
      register: result

    - name: Verify volume delete idempotency and formatting
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg is defined
          - result.msg == "Deleted volume " ~ volume_name ~ " in " ~ region

    #
    #  Create the same volume twice, should fail
    #

    - name: Create DigitalOcean volume
      community.digitalocean.volumes:
        state: present
        token: "{{ do_api_key }}"
        name: "{{ volume_name }}"
        region: "{{ region }}"
        size_gigabytes: "{{ size_gigabytes }}"
      register: result

    - name: Verify volume create idempotency and formatting
      ansible.builtin.assert:
        that:
          - result.changed
          - result.volume is defined
          - result.volume.id is defined

    - name: Sleep for a minute
      ansible.builtin.pause:
        minutes: 1

    - name: Create DigitalOcean volume
      community.digitalocean.volumes:
        state: present
        token: "{{ do_api_key }}"
        name: "{{ volume_name }}"
        region: "{{ region }}"
        size_gigabytes: "{{ size_gigabytes }}"
      register: result
      ignore_errors: true

    - name: Verify volume create failed
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.failed
          - result.msg is defined
          - result.msg == "failed to create volume: already exists"

  always:

    - name: Delete DigitalOcean volume
      community.digitalocean.volumes:
        state: absent
        token: "{{ do_api_key }}"
        name: "{{ volume_name }}"
        region: "{{ region }}"
      register: result
      ignore_errors: true
