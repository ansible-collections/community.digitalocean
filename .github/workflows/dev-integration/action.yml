name: dev-integration-module
description: integration test by module

inputs:
  module:
    description: DigitalOcean module to test
    required: true
  DO_API_KEY:
    description: DigitalOcean API key
    required: true
  AWS_ACCESS_KEY_ID:
    description: DigitalOcean Spaces key ID
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: DigitalOcean Spaces key
    required: true
  BADGES_GIST_TOKEN:
    description: Badges Gist Token
    required: true
  BADGES_GIST_ID:
    description: Badges Gist ID
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
    - shell: bash
      run: |
        echo "module: ${{ inputs.module }}"
    - uses: ansible-community/ansible-test-gh-action@release/v1
      id: test
      with:
        ansible-core-version: stable-2.11
        target: ${{ inputs.module }}
        pre-test-cmd: >-  # Configure integration test run
          DO_API_KEY=${{ inputs.DO_API_KEY }}
          AWS_ACCESS_KEY_ID=${{ inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ inputs.AWS_SECRET_ACCESS_KEY }}
          ./tests/utils/render.sh
          tests/integration/integration_config.yml.template
          > tests/integration/integration_config.yml
        python-version: 3.9
        target-python-version: 3.9
        testing-type: integration
        test-deps: community.general
      continue-on-error: true

    - uses: schneegans/dynamic-badges-action@v1.4.0
      if: ${{ steps.test.outcome == 'success' }}
      with:
        auth: ${{ inputs.BADGES_GIST_TOKEN }}
        gistID: ${{ inputs.BADGES_GIST_ID }}
        filename: ${{ inputs.module }}.json
        label: ${{ inputs.module }}
        message: ${{ steps.test.outcome }}
        color: "#3FBA50"

    - uses: schneegans/dynamic-badges-action@v1.4.0
      if: ${{ steps.test.outcome != 'success' }}
      with:
        auth: ${{ inputs.BADGES_GIST_TOKEN }}
        gistID: ${{ inputs.BADGES_GIST_ID }}
        filename: ${{ inputs.module }}.json
        label: ${{ inputs.module }}
        message: ${{ steps.test.outcome }}
        color: "#F9514A"

    - if: ${{ steps.test.outcome != 'success' }}
      shell: bash
      run: |
        exit 1
